        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:#include "dominion.h"
        -:    3:#include "dominion_helpers.h"
        -:    4:#include "rngs.h"
        -:    5:#include <string.h>
        -:    6:#include <stdio.h>
        -:    7:#include <math.h>
        -:    8:#include <stdlib.h>
        -:    9:#include <assert.h>
        -:   10:
        -:   11:
        1:   12:int main(){
        1:   13:   int seed = 1000;
        1:   14:   int numPlayers = 2;
        -:   15:
        1:   16:     int k[10] = {adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall};
        -:   17:
        -:   18:   struct gameState G;
        1:   19:   memset(&G, 23, sizeof(struct gameState));
        -:   20://    memset(&G1, 23, sizeof(struct gameState));
        -:   21:
        1:   22:   initializeGame(numPlayers, k, seed, &G);
        -:   23:  // memcpy(&G1, &G, sizeof(struct gameState));
        -:   24:
        1:   25:   printf("  **  cardtest buyCard()  **  \n");
        -:   26:   
        -:   27:
        1:   28:   G.numBuys=0;
        -:   29:  
        -:   30:   int  result;
        1:   31:   result=buyCard(2, &G);
        -:   32:
        -:   33://   printf("result is %d\n", result);
        -:   34:
        1:   35:   if (result==-1){printf("Pass the test\n");}
    #####:   36:   else{printf("Fail the test\n");}
        -:   37:
        1:   38:return 0;
        -:   39:}
