        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <string.h>
        -:    5:#include <stdio.h>
        -:    6:#include <math.h>
        -:    7:#include <stdlib.h>
        -:    8:#include <assert.h>
        -:    9:
        -:   10:// Unit test 1, test function isGameOver(struct gameState * state)
        -:   11:
        -:   12:
        -:   13:
        1:   14:int main (){
        -:   15:
        -:   16:
        1:   17:	int seed = 1000;
        1:   18:	int numPlayer = 2;
        1:   19:	int k[10] = {adventurer, council_room, feast, gardens, mine, remodel, smithy, village, baron, great_hall};
        -:   20:	
        1:   21:	printf("   ***   test isGameOver()  ****   \n");
        -:   22:
        -:   23:        struct gameState G;
        -:   24:
        1:   25:        memset(&G, 23, sizeof(struct gameState));
        1:   26:        initializeGame(numPlayer, k, seed, &G);
        -:   27:   
        1:   28:        printf("test 1\n");
        -:   29:
        1:   30:        G.supplyCount[province]=0;   // expected result, the game is over
        -:   31:
        -:   32:        int result;
        -:   33:
        1:   34:        result=isGameOver(&G);
        -:   35:
        1:   36:     		if (result==1){
        1:   37:         		printf("pass the test 1\n");
        -:   38:                          }
        -:   39:    		     else
    #####:   40:       		{  printf("fail the test 1");
        -:   41:          		}
        -:   42:
        1:   43:         printf("test 2\n"); 
        1:   44:         G.supplyCount[province]=1;
        -:   45:         int i;
       24:   46:         for (i=0; i<23; i++){
       23:   47:          G.supplyCount[i]=1;
        -:   48:           }                           // expected result, the game is not over.
        -:   49:
        -:   50:    
        1:   51:          result=isGameOver(&G);
        -:   52:
        1:   53:                if (result==0){
        1:   54:                        printf("pass the test 2\n");
        -:   55:                          }
        -:   56:                     else
    #####:   57:                {  printf("fail the test 2");
        -:   58:                        }
        -:   59: 
        -:   60:
        -:   61:
        -:   62:
        -:   63:
        -:   64:
        1:   65:return 0;
        -:   66:}
        -:   67:
